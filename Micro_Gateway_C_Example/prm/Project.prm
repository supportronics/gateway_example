/*
** ###################################################################
**     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : HCS12_OS_BIOS_Integration_stripped.PRM
**     Project   : HCS12_OS_BIOS_Integration_stripped
**     Processor : MC9S12XEQ512MAG
**     Compiler  : CodeWarrior HCS12X C Compiler
**     Date/Time : 14.07.2009, 15:20
**     Abstract  :
**        This file is used by the linker. It describes files to be linked,
**        memory ranges, stack size, etc. For detailed description of the PRM file
**        see CodeWarrior documentation. This file is generated by default.
**        You can switch off generation by setting the property
**        "Generate PRM file = no" on the "Build options" tab in CPU bean and then modify
**        this file if needed.
**
**     (c) Copyright UNIS, a.s. 1997-2008
**     UNIS, a.s.
**     Jundrovska 33
**     624 00 Brno
**     Czech Republic
**     http      : www.processorexpert.com
**     mail      : info@processorexpert.com
** ###################################################################
*/

NAMES

END

SEGMENTS  /* Here all RAM/ROM areas of the device are listed. Used in PLACEMENT below. */


      RAM           = READ_WRITE    0x2000 TO   0x3FFF;
      ROM_4000	    = READ_ONLY	    0x4020 TO	  0x7EFF;   //0x7FFF;    Frei ab 0x7F00   
   // ROM_C000      = READ_ONLY     0xC000 TO   0xFEFF;

      RAM_FA        = READ_WRITE  0xFA1000 TO 0xFA1FFF;
      RAM_FB        = READ_WRITE  0xFB1000 TO 0xFB1FFF;
      RAM_FC        = READ_WRITE  0xFC1000 TO 0xFC1FFF;
      RAM_FD        = READ_WRITE  0xFD1000 TO 0xFD1FFF;      

      // S. Datenblatt S.35
      // 16K FLASH window von 0x8000 bis 0xBFFF
      
      PAGE_E0       = READ_ONLY   0xE08000 TO 0xE0BFFF;
      PAGE_E1       = READ_ONLY   0xE18000 TO 0xE1BFFF;
      PAGE_E2       = READ_ONLY   0xE28000 TO 0xE2BFFF;
      PAGE_E3       = READ_ONLY   0xE38000 TO 0xE3BFFF;
      
      PAGE_FC       = READ_ONLY   0xFC8000 TO 0xFCBFFF;
// => PAGE_FE       = READ_ONLY   0xFE8000 TO 0xFEBFFF;     // Reserviert fuer BOOTLOADER-Erweiterung


END

PLACEMENT /* here all predefined and user segments are placed into the SEGMENTS defined above. */
      _PRESTART,              /* Used in HIWARE format: jump to _Startup at the code start */
      STARTUP,                /* startup data structures */
      ROM_VAR,                /* constant variables */
      STRINGS,                /* string literals */
      NON_BANKED,             /* runtime routines which must not be banked */
      COPY              INTO  ROM_4000;
//    COPY              INTO  ROM_C000;

      DEFAULT_ROM       INTO  /*PAGE_FE, PAGE_FC, PAGE_FB, PAGE_FA, PAGE_F9, PAGE_F8, PAGE_F7, PAGE_F6, 
                              PAGE_F5, PAGE_F4, PAGE_F3, PAGE_F2, PAGE_F1, PAGE_F0, PAGE_EF, PAGE_EE, 
                              PAGE_ED, PAGE_EC, PAGE_EB, PAGE_EA, PAGE_E9, PAGE_E8, PAGE_E7, PAGE_E6, 
                              PAGE_E5, PAGE_E4, PAGE_E3, PAGE_E2, PAGE_E1, PAGE_E0;
                              */
                              PAGE_FC, PAGE_E3, PAGE_E2, PAGE_E1, PAGE_E0;

      DEFAULT_RAM,       /* all variables, the default RAM location */
      DEFAULT_RAM_EXT
                        INTO  RAM;
                              
END

INIT _EntryPoint              /* The entry point of the application. This function is generated into the CPU module. */

STACKSIZE 0x0200              /* Size of the system stack. Value can be changed on the "Build options" tab */
